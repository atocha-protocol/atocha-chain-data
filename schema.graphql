
type PuzzleCreatedEvent @entity {
  id: ID! # puzzle_hash
  who: AtochaUserStruct
  puzzle_hash: String!
  create_bn: BigInt
  event_bn: BigInt
  event_hash: String
  owner_deposit: BigInt
  dyn_challenge_deadline: BigInt!
  dyn_challenge_status: String!
  dyn_have_matched_answer: Boolean!
  dyn_puzzle_status: String!
  dyn_raise_deadline: BigInt!
  dyn_total_deposit: BigInt
  ref_puzzle_status: [PuzzleStatusChangeEvent] @derivedFrom(field: "puzzle_info")
  ref_answer_infos: [AnswerCreatedEvent] @derivedFrom(field: "puzzle_info")
  ref_challenge_infos: [ChallengeDepositEvent] @derivedFrom(field: "puzzle_info")
  ref_challenge_status: [ChallengeStatusChangeEvent] @derivedFrom(field: "puzzle_info")
  ref_deposit_infos: [PuzzleDepositEvent] @derivedFrom(field: "puzzle_info")
  ref_take_reward: [TakeTokenRewardEvent] @derivedFrom(field: "puzzle_info")
  ref_take_point: [TakePointRewardEvent] @derivedFrom(field: "puzzle_info")
  ref_challenge_deadline: [AnnouncePuzzleChallengeDeadlineEvent] @derivedFrom(field: "puzzle_info")
  ref_raise_deadline: [ChallengeRaisePeriodDeadlineEvent] @derivedFrom(field: "puzzle_info")
}

type AnswerCreatedEvent @entity {
  id: ID! # BlockNumber && event_id
  who: AtochaUserStruct!
  puzzle_hash: String!
  answer_content: String!
  create_bn: BigInt!
  event_bn: BigInt!
  event_hash: String!
  result_type: String!
  puzzle_info: PuzzleCreatedEvent!
}

type ChallengeDepositEvent @entity {
  id: ID! # BlockNumber && event_id
  who: AtochaUserStruct!
  puzzle_hash: String!
  deposit: BigInt!
  deposit_type: String!
  event_bn: BigInt!
  event_hash: String!
  puzzle_info: PuzzleCreatedEvent!
}

type ChallengeStatusChangeEvent @entity {
  id: ID! # BlockNumber && event_id
  puzzle_info: PuzzleCreatedEvent!
  challenge_status: String!
#  change_bn: BigInt!
  event_bn: BigInt!
  event_hash: String!
}

# Puzzle status change.
type PuzzleStatusChangeEvent @entity {
  id: ID! # BlockNumber + eventIdx.
  event_bn: BigInt!
  event_hash: String!
  puzzle_info: PuzzleCreatedEvent!
  puzzle_status: String!
}

# atochaFinace.TakeTokenReward
type TakeTokenRewardEvent @entity {
  id: ID! # Puzzle hash.
  event_bn: BigInt!
  event_hash: String!
  puzzle_info: PuzzleCreatedEvent!
  token: BigInt!
  fee: BigInt!
}

# atochaFinace.TakePointReward
type TakePointRewardEvent @entity {
  id: ID! # Puzzle hash.
  event_bn: BigInt!
  event_hash: String!
  puzzle_info: PuzzleCreatedEvent!
  point: BigInt!
  fee: BigInt!
}

# atochaModule.AdditionalSponsorship
## TODO:: Remove under event.
#type AdditionalSponsorshipEvent @entity {
#  id: ID! # block_number + event_id
#  event_bn: BigInt!
#  event_hash: String!
#  puzzle_info: PuzzleCreatedEvent!
#  who: String!
#  deposit: BigInt!
#  reason: String
#}

type PuzzleDepositEvent @entity {
  id: ID! # block_number + event_id
  event_bn: BigInt!
  event_hash: String!
  puzzle_info: PuzzleCreatedEvent!
  who: AtochaUserStruct!
  deposit: BigInt!
  tip: String
}

# atochaModule.AnnouncePuzzleChallengeDeadline
type AnnouncePuzzleChallengeDeadlineEvent @entity {
  id: ID! # block_number + event_id
  deadline: BigInt!
  event_bn: BigInt!
  event_hash: String!
  puzzle_info: PuzzleCreatedEvent!
}

# atochaFinace.ChallengeRaisePeriodDeadline
type ChallengeRaisePeriodDeadlineEvent @entity {
  id: ID! # block_number + event_id
  deadline: BigInt!
  event_bn: BigInt!
  event_hash: String!
  puzzle_info: PuzzleCreatedEvent!
}

## atochaUser
type AtochaUserStruct @entity {
  id: ID!
  ref_create_events: [PuzzleCreatedEvent] @derivedFrom(field: "who")
  ref_deposit_events: [PuzzleDepositEvent] @derivedFrom(field: "who")
  ref_answer_events: [AnswerCreatedEvent] @derivedFrom(field: "who")
  ref_challenge_depoist_events: [ChallengeDepositEvent] @derivedFrom(field: "who")
}